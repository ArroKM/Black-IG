import hashlib
import base64
"""<--
×××××××××××××××××××××××××××××××××××××××××××××××××××××
Tools Description
Name    :  Black-IG
Author  :  AseCx
Support :  XiuzCode Team
Version :  Lates Version (0.1)
License :  MIT License
×××××××××××××××××××××××××××××××××××××××××××××××××××××
-->"""
def unpack(api_key, code):
        api, result = "", ""
        cek_key = hashlib.pbkdf2_hmac("sha256", api_key.encode("utf-8"), code, 100000)
        if cek_key != b'\xb6\xcc6\x85#&\x01\xc2\xa6~K\xb5\xad\x1f\xaf\xd23\xa5\x99\xfb\xc4\x04\x11\xdc%s\x9f|d\x84X6':
             exit("Api Key tidak valid")
        else:
             api = "".join([api+chr(ord(i)+2) for i in api_key])
             result = "".join([result+chr(ord(val[0])-2) for i, val in enumerate(base64.b64decode(code).decode("utf-8").split(api[1:3]), start=0) if i >= 1])

        return result


if __name__=="__main__":
       exec (unpack(input("Api Key : "), b''))
